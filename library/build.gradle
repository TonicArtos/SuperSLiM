apply plugin: 'com.android.library'
apply plugin: 'bintray-release'
apply plugin: 'jacoco'

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 21
        versionCode 1
        versionName '0.4'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
	debug {
	    testCoverageEnabled true
	}
    }
    lintOptions {
        abortOnError false
    }
    productFlavors {
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:recyclerview-v7:22.1.1'

    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:2.0.7-beta"
    testCompile "com.squareup.assertj:assertj-android:1.0.1"
    testCompile "org.robolectric:robolectric:3.0-rc2"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    def coverageSourceDirs = ['src/main/java']
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/BitmapRequestBuilder.class',
                       '**/DrawableRequestBuilder.class',
                       '**/GifRequestBuilder.class',]
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

apply from: 'https://raw.github.com/TonicArtos/gradle-mvn-push/master/gradle-mvn-push.gradle'

afterEvaluate {
    androidJavadocs.classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
}

publish {
    groupId = 'com.tonicartos'
    artifactId = 'superslim'
    uploadName = 'com.tonicartos:superslim' // I don't know why, but I had to do this.
    publishVersion = VERSION_NAME
    description = 'A layout manager for the RecyclerView with interchangeable linear, grid, and staggered displays of views, all with configurable section headers including the sticky variety as specified in the material design docs.'
    website = 'https://github.com/TonicArtos/SuperSLiM'
    autoPublish = false
    dryRun = false
}
